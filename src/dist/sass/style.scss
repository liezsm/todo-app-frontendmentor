@use "globals" as g;
@use "mixins" as m;

body {
  font-size: g.$font-size;
  font-family: g.$font-family;
  width: 100%;
  height: 100vh;
  transition: background-color 500ms ease;
}

body.dark-theme {
  background-color: black;
}

body.light-theme {
  background-color: g.$veryLightGrayishBlue;
}

.App {
  width: 100%;
  height: 100%;
}

.wrapper {
  width: 90vw;
  margin: auto;
  @include m.desktop() {
    width: m.pxToRem(535px);
  }
}

.light-theme {
  @include m.light-theme(true);
}

.dark-theme {
  @include m.dark-theme(true);
}
header {
  width: 100%;
  height: m.pxToRem(210px);
  color: g.$veryLightGray;
  font-weight: bold;
  @include m.add-padding(top, m.pxToRem(40px));
  @include m.desktop() {
    font-size: m.pxToRem(30px);
    height: m.pxToRem(310px);
  }

  .title {
    @include m.d-flex;
    @include m.add-padding(bottom, 32px);
    @include m.desktop() {
      @include m.add-padding(bottom, 44px);
    }

    .btn {
      background-color: transparent;
      border: none;
      outline: none;

      :hover {
        cursor: pointer;
        transform: scale(1.05);
      }
      @include m.desktop() {
        img {
          width: 30px;
        }
      }
    }
  }

  form {
    font-size: m.pxToRem(14px);

    @include m.desktop() {
      font-size: m.pxToRem(20px);
    }
  }

  .addTodo-form {
    margin: auto;

    width: 100%;
    height: m.pxToRem(50px);
    padding: 1rem;
    border-radius: 0.7rem;
    @include m.d-flex-row;

    @include m.desktop() {
      height: m.pxToRem(62px);
      align-items: center;
    }
    .todo-input {
      font-size: m.pxToRem(18px);
      width: 90%;
      padding: 0.5rem;
      border: none;
      outline: none;
      background-color: transparent;
    }
  }
}

.checkbox {
  -webkit-appearance: none;
  position: relative;
  width: m.pxToRem(20px);
  height: m.pxToRem(20px);
  border-radius: 50%;
  background: transparent;
  cursor: pointer;

  @include m.desktop() {
    width: m.pxToRem(30px);
    height: m.pxToRem(30px);
  }

  &:checked {
    background: g.$checked;

    &::before {
      display: block;
    }
  }

  &::before {
    content: "";
    position: absolute;
    top: 55%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    height: 70%;
    pointer-events: none;
    background-image: url("../images/icon-check.svg");
    background-size: contain;
    background-repeat: no-repeat;
    display: none;
  }
}

main {
  .todo-card {
    margin: auto;
    margin-top: -2rem;
    width: 100%;
    border-radius: 0.7rem;
    height: auto;
    font-size: m.pxToRem(14px);

    @include m.desktop() {
      width: 100%;
      margin-top: -4rem;
      font-size: m.pxToRem(18px);
      box-shadow: -10px 20px 50px black, 10px 20px 50px black;
    }
  }

  .filter-card {
    @include m.d-flex;
    padding: m.pxToRem(11px) m.pxToRem(65px);
    justify-content: space-around;
    width: 100%;
    margin: auto;
    margin-top: 2rem;
    color: rgba(0, 0, 0, 0.2);
    border-radius: 0.7rem;
    @include m.desktop() {
      display: none;
    }
    button {
      font-size: m.pxToRem(14px);
      font-weight: bold;
      padding: 1rem;
    }
  }
}

.task-item {
  @include m.d-flex;
  justify-content: start;
  gap: 1rem;
  border-bottom: 1px solid g.$darkGrayishBlue2;
  @include m.add-padding(all, 1rem);
  p {
    cursor: pointer;
  }

  .delete-btn {
    background-color: transparent;
    border: none;
    transition: opacity 300ms ease-in;
    margin-left: auto;

    @include m.desktop() {
      opacity: 0;
    }
  }

  &:hover .delete-btn {
    opacity: 1;
  }
}

.checked-task {
  text-decoration: line-through;
}

.task-counter {
  color: g.$veryDarkGrayishBlue;
  @include m.d-flex;
  @include m.add-padding(all, 1rem);

  .fiter-desktop-only {
    display: none;

    @include m.desktop() {
      display: block;

      a {
        @include m.add-padding(x, 1rem);
      }
    }
  }
}

.fiter-desktop-only {
  > * {
    @include m.add-padding(x, 1rem);
  }
}

// todo filter links color

.blue-color {
  color: g.$brightBlue;
}

footer {
  color: g.$darkGrayishBlue2;
  text-align: center;
  margin-top: m.pxToRem(42px);
  font-size: 15px;

  @include m.desktop() {
    margin-top: m.pxToRem(47px);
  }
}
